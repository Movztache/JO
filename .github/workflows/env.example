# ============================================================================
# EXEMPLE DE CONFIGURATION DES SECRETS ET VARIABLES GITHUB ACTIONS
# ============================================================================
#
# Ce fichier contient un exemple de toutes les variables et secrets nécessaires
# pour faire fonctionner les pipelines GitHub Actions du projet Vibe-Tickets.
#
# IMPORTANT : Ce fichier est un exemple uniquement !
# Les vraies valeurs doivent être configurées dans :
# - Settings > Secrets and variables > Actions > Secrets (pour les secrets)
# - Settings > Secrets and variables > Actions > Variables (pour les variables)
#
# ============================================================================

# ============================================================================
# SECRETS GITHUB ACTIONS (Settings > Secrets and variables > Actions > Secrets)
# ============================================================================

# Credentials AWS (OBLIGATOIRES)
AWS_ACCESS_KEY_ID=AKIA...                    # Clé d'accès AWS
AWS_SECRET_ACCESS_KEY=wJalrXUt...            # Clé secrète AWS
AWS_ACCOUNT_ID=756942038699                  # ID du compte AWS

# Notifications (OPTIONNELS)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...     # Webhook Slack
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...  # Webhook Discord

# Base de données (OPTIONNELS - utilisés si différents des valeurs par défaut)
DB_PASSWORD=your-secure-password             # Mot de passe RDS (si différent)
JWT_SECRET=your-jwt-secret-key              # Clé JWT (si différente)

# ============================================================================
# VARIABLES GITHUB ACTIONS (Settings > Secrets and variables > Actions > Variables)
# ============================================================================

# Configuration AWS
AWS_REGION=eu-west-3                        # Région AWS par défaut
ECR_REPOSITORY=vibe-tickets                 # Nom du repository ECR

# Configuration des outils
TERRAFORM_VERSION=1.6.0                     # Version de Terraform
JAVA_VERSION=21                             # Version de Java
MAVEN_OPTS=-Xmx1024m -XX:MetaspaceSize=256m   # Options Maven

# Configuration de l'application
PROJECT_NAME=vibe-tickets                   # Nom du projet
DEFAULT_ENVIRONMENT=dev                     # Environnement par défaut

# Configuration des timeouts
HEALTH_CHECK_TIMEOUT=300                    # Timeout health check (secondes)
DEPLOYMENT_TIMEOUT=1800                     # Timeout déploiement (secondes)

# ============================================================================
# VARIABLES D'ENVIRONNEMENT DANS LES WORKFLOWS
# ============================================================================

# Ces variables sont définies directement dans les fichiers de workflow
# et peuvent être surchargées par les variables GitHub Actions ci-dessus

# Configuration Docker
DOCKER_BUILDKIT=1                           # Activer BuildKit
DOCKER_CLI_EXPERIMENTAL=enabled             # Fonctionnalités expérimentales

# Configuration Maven
MAVEN_OPTS=-Xmx1024m -XX:MetaspaceSize=256m   # Options JVM pour Maven

# Configuration des tests
SPRING_PROFILES_ACTIVE=test                 # Profil Spring pour les tests
TEST_DATABASE_URL=jdbc:postgresql://localhost:5432/vibe_tickets_test

# ============================================================================
# CONFIGURATION DES ENVIRONNEMENTS GITHUB
# ============================================================================

# Les environnements GitHub permettent de protéger les déploiements
# et de définir des secrets spécifiques par environnement

# Environnement: development
# - Pas de protection
# - Déploiement automatique
# - Secrets: mêmes que ci-dessus

# Environnement: staging  
# - Protection: Approbation requise
# - Déploiement semi-automatique
# - Secrets: spécifiques au staging

# Environnement: production
# - Protection: Approbation + délai
# - Déploiement manuel uniquement
# - Secrets: spécifiques à la production

# ============================================================================
# INSTRUCTIONS DE CONFIGURATION
# ============================================================================

# 1. CRÉER LES SECRETS
#    - Aller dans Settings > Secrets and variables > Actions
#    - Cliquer sur "New repository secret"
#    - Ajouter chaque secret avec sa valeur réelle

# 2. CRÉER LES VARIABLES
#    - Aller dans Settings > Secrets and variables > Actions > Variables
#    - Cliquer sur "New repository variable"
#    - Ajouter chaque variable avec sa valeur

# 3. CONFIGURER LES ENVIRONNEMENTS (OPTIONNEL)
#    - Aller dans Settings > Environments
#    - Créer les environnements : development, staging, production
#    - Configurer les règles de protection pour chaque environnement

# 4. TESTER LA CONFIGURATION
#    - Faire un push sur une branche de test
#    - Vérifier que le workflow se lance correctement
#    - Vérifier les logs pour s'assurer que les secrets sont bien chargés

# ============================================================================
# SÉCURITÉ ET BONNES PRATIQUES
# ============================================================================

# ✅ BONNES PRATIQUES :
# - Utiliser des secrets pour toutes les informations sensibles
# - Créer un utilisateur IAM dédié pour GitHub Actions
# - Appliquer le principe du moindre privilège pour les permissions AWS
# - Utiliser des environnements GitHub pour protéger la production
# - Faire tourner les clés d'accès régulièrement
# - Monitorer les logs des workflows pour détecter les anomalies

# ❌ À ÉVITER :
# - Mettre des secrets dans le code source
# - Utiliser des clés d'accès personnelles pour l'automatisation
# - Donner des permissions trop larges aux utilisateurs IAM
# - Déployer en production sans validation
# - Ignorer les alertes de sécurité

# ============================================================================
# DÉPANNAGE
# ============================================================================

# Problème : "The security token included in the request is invalid"
# Solution : Vérifier AWS_ACCESS_KEY_ID et AWS_SECRET_ACCESS_KEY

# Problème : "Repository vibe-tickets does not exist"
# Solution : Créer le repository ECR ou vérifier ECR_REPOSITORY

# Problème : "Permission denied"
# Solution : Vérifier les permissions IAM de l'utilisateur

# Problème : "Workflow failed"
# Solution : Consulter les logs détaillés dans l'onglet Actions

# ============================================================================
# RESSOURCES UTILES
# ============================================================================

# Documentation GitHub Actions : https://docs.github.com/en/actions
# Documentation AWS IAM : https://docs.aws.amazon.com/iam/
# Documentation Terraform : https://www.terraform.io/docs
# Guide de sécurité GitHub : https://docs.github.com/en/actions/security-guides
